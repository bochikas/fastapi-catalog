[tool.poetry]
name = "fastapi-catalog"
version = "0.1.0"
description = ""
authors = ["Kambarov Damir"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.12"
uvicorn = "^0.34.0"
sqlalchemy = "^2.0.40"
pydantic = "^2.11.3"
pydantic-settings = "^2.8.1"
python-dotenv = "^1.1.0"
asyncpg = "^0.30.0"
greenlet = "^3.1.1"
alembic = "^1.15.2"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.5.0"
isort = "^6.0.0"
wemake-python-styleguide = "0.18.0"
flake8 = "^7.0.0"
flake8-html = "^0.4.3"
autoflake = "^2.3.1"
pyproject-flake8 = "^7.0.0"
black = "^25.1.0"
ruff = "^0.9.6"
django-debug-toolbar = "^5.0.1"
pytest = "^8.3.5"

[tool.black]
line-length = 120
target-version = ["py311"]
exclude = """
(
    .venv
    | flake-report
    | venv
    | migrations
    | tests
)
"""

[tool.isort]
profile = "wemake"
default_section = "THIRDPARTY"
known_first_party = ["config", "crud", "db", "dependencies", "routers", "schemas"]
skip_glob = ["**/__pycache__", ".venv", "flake-report", "venv", "**/tests"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
line_length = 120

[tool.autoflake]
imports = ["fastapi", "pydantic", "sqlalchemy"]

[tool.flake8]
inline-quotes = "\""
format = "wemake"
show-source = true
statistics = "false"
doctests = true
select = "C,E,F,W,B,B950"
ignore = """
C812,C815,C816,C408,C901,\
W503,\
WPS100,WPS110,WPS114,WPS115,\
WPS201,WPS202,WPS203,WPS210,WPS211,WPS213,WPS214,WPS215,WPS216,WPS219,WPS220,WPS221,WPS222,WPS226,WPS230,WPS231,WPS234,WPS235,WPS237,\
WPS305,WPS306,WPS318,WPS319,WPS320,WPS323,WPS332,WPS337,WPS347,WPS348,\
WPS400,WPS402,WPS404,WPS407,WPS410,WPS412,WPS421,WPS425,WPS430,WPS431,WPS432,WPS442,WPS462,WPS463,\
WPS501,WPS503,WPS510,WPS529,\
WPS601,WPS602,WPS615
"""
max-try-body-length = 5
max-line-length = 120
strictness = "long"
docstring-style = "numpy"
exclude = [
    "**/__pycache__",
    ".venv",
    "**/tests/**",
    "flake-report",
    "venv",
    "test_data.json",
    "seed_db.py",
    "**/migrations/**",
]
min-name-length = 1
per-file-ignores = [
    "src/routers/catalog.py:WPS232,B008",
    "src/routers/*:B008",
    "src/crud/product.py:WPS238,WPS232",
    "src/crud/common.py:WPS232",
]

[tool.ruff]
line-length = 120
target-version = "py311"
fix = true
force-exclude = true

extend-exclude = [
    "tests",
    "docker",
    "__pycache",
    ".pre-commit-config.yaml",
    ".env.example",
    "*.yml",
    ".gitignore",
    "test_data.json",
    "migrations",
    "alembic.ini",
]

[tool.ruff.lint.extend-per-file-ignores]
"src/routers/*" = ["B008"]

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint]
select = [
    "F",        # pyflakes
    "E", "W",   # pycodestyle
    "C90",      # mccabe
    "ERA",      # eradicate
    "N",        # pep8-naming
    "B",        # flake8-bugbear
    "T20",      # flake8-print
    "RET",      # flake8-return
    "TCH",      # flake8-type-checking
]

fixable = [
    "A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN",
    "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN",
    "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET",
    "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"
]

# disable autofix for some possibly-unsafe rules
unfixable = ["B", "SIM", "TRY", "RUF"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
